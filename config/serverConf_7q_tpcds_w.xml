<config ip="localhost" port="5322" restartPenalty="5">
		<log file="dbs.log" type="stderr, file"/>
		<modules>
		<module exec="./externalImport" name="External_imports">
   <config checkInterval="5">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <tables>
		<table ioTime="2920" name="catalog_sales"/> 
		<table ioTime="225" name="catalog_returns"/> 
		<table ioTime="5623" name="inventory"/> 
		<table ioTime="11" name="date_dim"/> 
		<table ioTime="4039" name="store_sales"/> 
		<table ioTime="54" name="item"/> 
		<table ioTime="1" name="warehouse"/> 

		<!--table name="call_center"/> 
		<table name="catalog_page"/> 
		<table name="customer"/> 
		<table name="customer_address"/> 
		<table name="customer_demographics"/> 
		<table name="household_demographics"/> 
		<table name="income_band"/> 
		<table name="promotion"/> 
		<table name="reason"/> 
		<table name="ship_mode"/> 
		<table name="store"/> 
		<table name="store_returns"/> 
		<table name="time_dim"/> 
		<table name="web_page"/> 
		<table name="web_returns"/> 
		<table name="web_sales"/> 
		<table name="web_site"/--> 
                        </tables>
</config>
        </module>
		<module exec="./viewgen" name=" Query20 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" catalog_sales (window 1), date_dim (window 1), item (window 1) " ioTime="3" output=" Query20 (window 1) ">
                        <query>
<![CDATA[

select  i_item_desc 
       ,i_category 
       ,i_class 
       ,i_current_price
       ,sum(cs_ext_sales_price) as itemrevenue 
       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
           (partition by i_class) as revenueratio
 from	catalog_sales
     ,item 
     ,date_dim
 where cs_item_sk = i_item_sk 
   and i_category in ('Jewelry', 'Sports', 'Books')
   and cs_sold_date_sk = d_date_sk
 and d_date between cast('2001-01-12' as date) 
 				and (cast('2001-01-12' as date) + 30)
 group by i_item_id
         ,i_item_desc 
         ,i_category
         ,i_class
         ,i_current_price
 order by i_category
         ,i_class
         ,i_item_id
         ,i_item_desc
         ,revenueratio
limit 100;


]]>
</query>
</job>
        </jobs>
</config>
</module>
		<module exec="./viewgen" name=" Query21 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" date_dim (window 1), inventory (window 1), item (window 1), warehouse (window 1) " ioTime="3" output=" Query21 (window 1) ">
                        <query>
<![CDATA[

select  *
 from(select w_warehouse_name
            ,i_item_id
            ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date))
	                then inv_quantity_on_hand 
                      else 0 end) as inv_before
            ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date))
                      then inv_quantity_on_hand 
                      else 0 end) as inv_after
   from inventory
       ,warehouse
       ,item
       ,date_dim
   where i_current_price between 0.99 and 1.49
     and i_item_sk          = inv_item_sk
     and inv_warehouse_sk   = w_warehouse_sk
     and inv_date_sk    = d_date_sk
     and d_date between (cast ('1998-04-08' as date) - 30)
                    and (cast ('1998-04-08' as date) + 30)
   group by w_warehouse_name, i_item_id) x
 where (case when inv_before > 0 
             then inv_after / inv_before 
             else null
             end) between 2.0/3.0 and 3.0/2.0
 order by w_warehouse_name
         ,i_item_id
 limit 100;


]]>
</query>
</job>
        </jobs>
</config>
</module>
		<module exec="./viewgen" name=" Query22 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" date_dim (window 1), inventory (window 1), item (window 1), warehouse (window 1) " ioTime="3" output=" Query22 (window 1) ">
                        <query>
<![CDATA[

select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from inventory
           ,date_dim
           ,item
           ,warehouse
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and inv_warehouse_sk = w_warehouse_sk
              and d_month_seq between 1176 and 1176 + 11
       group by i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100;


]]>
</query>
</job>
        </jobs>
</config>
</module>
		<!--module exec="./viewgen" name=" Query32 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" catalog_sales (window 1), date_dim (window 1), item (window 1) " ioTime="3" output=" Query32 (window 1) ">
                        <query>
<![CDATA[
--Query 32, exec_time ~ 0.5 sec
select  sum(cs_ext_discount_amt)  as "excess discount amount" 
from 
   catalog_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 977
and i_item_sk = cs_item_sk 
and d_date between '1998-03-18' and 
        (cast('1998-03-18' as date) + 90)
and d_date_sk = cs_sold_date_sk 
and cs_ext_discount_amt  
     > ( 
         select 
            1.3 * avg(cs_ext_discount_amt) 
         from 
            catalog_sales 
           ,date_dim
         where 
              cs_item_sk = i_item_sk 
          and d_date between '1998-03-18' and
                  (cast('1998-03-18' as date) + 90)
          and d_date_sk = cs_sold_date_sk 
      ) 
limit 100;


]]>
</query>
</job>
        </jobs>
</config>
</module-->
		<!--module exec="./viewgen" name=" Query39 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" date_dim (window 1), inventory (window 1), item (window 1), warehouse (window 1) " ioTime="3" output=" Query39 (window 1) ">
                        <query>
<![CDATA[
with inv as
(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
       ,stdev,mean, case mean when 0 then null else stdev/mean end cov
 from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean
      from inventory
          ,item
          ,warehouse
          ,date_dim
      where inv_item_sk = i_item_sk
        and inv_warehouse_sk = w_warehouse_sk
        and inv_date_sk = d_date_sk
        and d_year =2000
      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo
 where case mean when 0 then 0 else stdev/mean end > 1)
select inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov
        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov
from inv inv1,inv inv2
where inv1.i_item_sk = inv2.i_item_sk
  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk
  and inv1.d_moy=1
  and inv2.d_moy=1+1
order by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov
        ,inv2.d_moy,inv2.mean, inv2.cov;
]]>
</query>
</job>
        </jobs>
</config>
</module-->
		<module exec="./viewgen" name=" Query3 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" date_dim (window 1), item (window 1), store_sales (window 1) " ioTime="3" output=" Query3 (window 1) ">
                        <query>
<![CDATA[
select  dt.d_year 
       ,item.i_brand_id brand_id 
       ,item.i_brand brand
       ,sum(ss_ext_sales_price) sum_agg
 from  date_dim dt 
      ,store_sales
      ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
   and store_sales.ss_item_sk = item.i_item_sk
   and item.i_manufact_id = 436
   and dt.d_moy=12
 group by dt.d_year
      ,item.i_brand
      ,item.i_brand_id
 order by dt.d_year
         ,sum_agg desc
         ,brand_id
 limit 100;


]]>
</query>
</job>
        </jobs>
</config>
</module>
		<module exec="./viewgen" name=" Query40 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" catalog_returns (window 1), catalog_sales (window 1), date_dim (window 1), item (window 1), warehouse (window 1) " ioTime="3" output=" Query40 (window 1) ">
                        <query>
<![CDATA[

select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('1998-04-08' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (cast ('1998-04-08' as date) - 30)
                and (cast ('1998-04-08' as date) + 30) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100;


]]>
</query>
</job>
        </jobs>
</config>
</module>
		<module exec="./viewgen" name=" Query42 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" date_dim (window 1), item (window 1), store_sales (window 1) " ioTime="3" output=" Query42 (window 1) ">
                        <query>
<![CDATA[

select  dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1  	
 	and dt.d_moy=12
 	and dt.d_year=1998
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by       sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ;


]]>
</query>
</job>
        </jobs>
</config>
</module>
		<module exec="./viewgen" name=" Query98 ">
<config partitionSchema="view0">
        <scheduler ip="localhost" port="5323"/>
        <dbs dbname="dbstream" host="localhost" password="FT4hhyhL" port="5440" user="dbstream"/>
        <jobs>
                <job description="Query , exec_time  sec" inputs=" date_dim (window 1), item (window 1), store_sales (window 1) " ioTime="3" output=" Query98 (window 1) ">
                        <query>
<![CDATA[

select i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ss_ext_sales_price) as itemrevenue 
      ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	store_sales
    	,item 
    	,date_dim
where 
	ss_item_sk = i_item_sk 
  	and i_category in ('Jewelry', 'Sports', 'Books')
  	and ss_sold_date_sk = d_date_sk
	and d_date between cast('2001-01-12' as date) 
				and (cast('2001-01-12' as date) + 30)
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio;


]]>
</query>
</job>
        </jobs>
</config>
</module></modules>
	</config>